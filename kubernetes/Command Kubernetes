#->Google

###Deploy application
#kubectl create deployment hello-world-rest-api --image=in28min/hello-world-rest-api:0.0.1.RELEASE

###Expose to the outside world
#kubectl expose deployment hello-world-rest-api --type=LoadBalancer --port=8080

###Pods -> Smallest deployment unit is a collection of containers that can run on a host. This resource is created by clients and scheduled onto hosts.
#kubectl get pods

###Delete Pods
#kubectl delete pods {name}

###Scale to have 3 instances
#kubectl scale deployment hello-world-rest-api --replicas=3

###Order events by time
#kubectl get events --sort-by=.metadata.creationTimestamp

###Get info from ReplicaSets
#kubectl get rs -o wide

###Set new image 
#kubectl set image deployment hello-world-rest-api(name deployment) hello-world-rest-api(container name)=in28min/hello-world-rest-api:0.0.2.RELEASE


###Region & Zones
#Region -> Latency reasons for the application
#          Availability(across multiple regions)
#          Data gathering and store(legal requirements)

#Zones -> Physical arthitecture in each Region

###Gcloud local computer

###///Installed Gcloud & kubectl on local machine
###Login
#gcloud auth login

###Connect to cluster
#gcloud container clusters get-credentials {cluster name} --region {name} --project {id}

###Kubernetes Rollout
#kubectl rollout history deployment hello-world-rest-api

###Add record
#kubectl set image deployment hello-world-rest-api hello-world-rest-api=in28min/hello-world-rest-api:0.0.3.RELEASE --record=true

###Rollback
#kubectl rollout undo deployment hello-world-rest-api --to-revision=1

###Get Logs
#kubectl logs -f hello-world-rest-api-64988599db-b4bdc

###Get yaml
#kubectl get deployment hello-world-rest-api -o yaml

###Save yaml deployment
#kubectl get deployment hello-world-rest-api -o yaml > deployment.yaml

###Save yaml services
#kubectl get services hello-world-rest-api -o yaml > services.yaml

###Apply changes to deployment.yaml
#kubectl apply -f deployment.yaml

###Delete services
#kubectl delete all -l app={selector name}

###See file diferences between version
#kubectl diff -f {file}

###Website ready
#watch curl {address}

###If replicaSet sees all pods running, it doesn't update to new version(kind: ReplicaSet(deployment.yaml)). Needs to delete a pod

###Order by name services
#kubectl get services --all-namespaces --sort-by=.metadata.name



